49.7557403007522,8.01455787277093
1.34741564746946,3.14225499420176
28.2304211938754,6.42634837188756
25.9562468994409,5.91208258345141
30.6269413791597,7.0798915084297
2.15862037148327,3.12368593092714
53.4571900265291,8.11999916738167
24.4452035240829,5.02990064888526
27.1462036902085,5.65519257604807
3.41704718302935,3.18667345261683
19.3485043058172,5.3191582118417
56.7685300670564,8.01914022949626
56.1650008941069,8.15359963781785
21.3433917565271,6.0128320157413
42.8753426251933,6.9072639329765
26.989897931926,6.38939216705669
1.70653583016247,3.66020229928156
4.30188251193613,3.14396742701704
35.234238691628,6.56803626620895
33.0641636392102,6.45257919593
58.5413235006854,8.41524719295579
25.7193049276248,6.04362929004321
39.9243143107742,7.60124330846271
43.211397039704,7.25927893903599
6.6856798902154,4.28126869300309
10.1709125982597,4.00867370145078
40.3759698104113,6.7054702273583
49.7142557613552,7.72976966936038
47.4819353409111,7.68511514913393
52.7291347179562,7.81982812444759
15.7274957327172,5.06376127621819
45.5319788027555,7.49608271133107
40.0521901203319,6.95152897692524
20.10408539325,5.85666928516698
2.48367360793054,3.45723690183432
53.293917956762,7.81474310413308
19.0047805337235,5.51413685213081
42.3685157904401,7.33436125550865
18.0306924227625,5.01244222682336
35.5758616235107,6.47069235056299
31.2156189093366,6.36362693880853
39.9407647736371,7.02961566017594
31.741418838501,6.61709259472514
9.17784106917679,4.17432098760747
16.4045029878616,4.84973519782395
0.262071741744876,3.18998060497591
9.80199978221208,4.58941089356386
46.564139672555,8.2205485142677
56.6453698882833,8.11667769140222
56.2630510143936,8.12622363481674
42.9917389852926,7.24650450414778
18.1573484418914,5.33479264477241
18.2690487010404,4.93493154885458
2.1741300355643,2.40057073825165
44.5031036389992,7.57919624856188
8.6280021769926,3.98262858493994
34.7843481553718,7.29768922093828
35.5942190811038,6.79587825946158
27.2588908206671,5.85825111277282
36.8174308352172,7.09328540595755
18.7005555862561,5.29477040130868
31.480366406031,6.90141362411412
18.5547502432019,5.9535721242574
30.9796776808798,6.48673017253532
45.6620241841301,7.62319467805125
28.1928212335333,6.1543301129553
20.3239760315046,5.13313157598729
49.3204451585189,8.03218406431596
16.2015775730833,4.79850350745404
45.715085179545,7.60831239009053
26.0462974151596,5.94832549685077
38.1872518267483,6.9879883115287
23.8348876638338,5.80964353125964
9.51954675838351,4.7054419931469
30.3337370557711,6.16010167938697
11.5945001877844,4.50009722709917
9.58603075705469,4.1062883732429
24.4883865583688,6.14867651841901
25.3008519206196,5.48539963486128
12.4431456858292,3.99085031432364
49.7188554564491,7.8012608518403
39.4481571251526,6.89676877755613
59.4006094196811,8.2406805155489
37.2130676032975,7.13326526487962
46.3036734843627,7.66073466569558
27.3500460013747,5.95066783533587
11.0223718592897,4.94536191034379
34.7758071217686,6.734823336025
30.4888050723821,6.3139390481643
41.7382830753922,7.51734682225177
57.580951298587,8.79205072368509
55.387055631727,7.53540179168084
49.2550784815103,8.09449628041802
53.1394735677168,7.73609920777818
21.1036944575608,5.71163751938235
6.38988344930112,3.5918560791772
33.3025174867362,5.99694524370701
34.1780460532755,6.30895288677949
49.8587655974552,7.74857427575061
35.7405225466937,7.01556914869463
30.9324436169118,6.63742148097503
47.4434628523886,7.43833268417781
10.0374849513173,4.52053903921627
0.296369357965887,3.32648655850628
44.8150901170447,7.08267147316769
6.93540647160262,3.394030050169
49.2953528277576,8.59051352205138
15.8580353530124,5.328675537106
21.4957778714597,5.05224897551283
3.18549096118659,3.27612191820932
49.1303790081292,7.69267553795913
16.8583828210831,4.68939595965203
6.53396326582879,4.21296911782498
24.8405709816143,6.24822641708909
2.5372268864885,2.64370190153824
32.0150764519349,6.49985171561127
31.119044451043,6.57703918288872
4.03636928647757,3.35685209015871
20.5933547811583,5.04478775225009
50.8404539851472,7.03494772834124
40.9431750699878,7.12137830497653
50.0273933680728,7.33780613525084
18.2494733948261,5.12455414849538
5.21128529682755,3.24078858966585
42.1915416559204,7.35030087505345
9.04729921370745,3.9008816597819
10.5323123373091,4.18411674639282
25.1722981827334,5.74841274972608
53.4808194078505,8.19478487352272
56.1762533057481,7.70369361132665
14.9142551841214,4.64005436421638
3.74070635531098,3.2382341072053
18.3528192155063,5.14025688804182
5.90346652083099,3.06065805787133
54.0809508785605,8.18993902735996
44.2407185398042,6.84015108786972
56.8868016125634,8.53067280933734
28.3900763327256,6.17474858174338
29.9579651188105,6.38075061426879
35.2563194185495,6.70480449295822
1.3828791026026,3.28694139750048
28.3946629939601,6.49442467841901
24.4778224825859,5.93076638033872
2.16963700018823,3.17254190453807
10.2039576228708,3.84342641705536
9.51780863106251,4.23136173531195
37.6703008124605,7.07155100302354
32.4053315492347,6.62873453386503
22.8606606787071,5.20086694369812
0.669918777421117,3.16843785158916
14.429116146639,5.32249550297649
11.6481135506183,4.513455305159
47.7756777824834,7.10398854226676
45.0937636848539,7.65351753283433
37.3131221160293,7.24691626076999
33.390297414735,6.91830072775498
14.188419166021,4.7293520706731
31.6731636459008,6.26164658958703
55.4343768395483,7.28977639030629
26.6110567515716,5.53553691063646
37.5448309723288,6.58395774047054
12.595424875617,4.5616778896201
16.9093110132962,4.78900362145006
exp <- read.table("dataanal.txt", sep = ",")
getwd()
library(swirl)
rm(list=ls())
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
head(airquality)
xyplot(Ozone~Wind, data set = airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, col = "red",pch=8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red",main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month))
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[[x.limits]]
p[["x.limits"]]
table(fd)
table(fd)
table(f)
xyplot(y~x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R", local = TRUE)
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit[["myLabels.R"]]
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = "myxlab", ylab = "myylab", main = "mymain")
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette((c("red", "blue")))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2("red":"yellow")
p2(colorRampPalette("red", "yellow"))
p2<- colorRampPalette("red", "yellow")
skip()
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = 0.5)
p3(5)
plot(x,y, pch = 19, col = rgb(0, .5, .5))
plot(x,y, pch = 19, col = rgb(0, .5, .5, 0.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
pal(20)
image(volcano, pal(20))
image(volcano, col = pal(20))
image(volcano, p1(20))
image(volcano, col = p1(20))
Total_emissions <- NEI %>% group_by(year, sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = total_emissions$Emissions, names.arg =  total_emissions$year,
col = colors)
library(dplyr)
Total_emissions <- NEI %>% group_by(year, sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = total_emissions$Emissions, names.arg =  total_emissions$year,
col = colors)
library(dplyr)
Total_emissions <- NEI %>% group_by(year, sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = Total_emissions$Emissions, names.arg =  total_emissions$year,
col = colors)
setwd("/Users/markconrad/Desktop/final project exploratory analysis/exdata%2Fdata%2FNEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
setwd("/C:/Users/Farts of War/Desktop/final project exploratory analysis/exdata%2Fdata%2FNEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
setwd("/C:/Users/Farts of War/Desktop/final project exploratory analysis/exdata%2Fdata%2FNEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
getwd()
setwd("C:/Users/Farts of War/Desktop/final project exploratory analysis/exdata%2Fdata%2FNEI_data")
setwd("/C:/Users/Farts of War/Desktop/final project exploratory analysis/exdata%2Fdata%2FNEI_data")
setwd("C:/Users/Farts of War")
setwd("C:/Users/Farts of War/Desktop/final project exploratory analysis")
setwd("C:/Users/Farts of War/Desktop/final project exploratory analysis/exdata%2Fdata%2FNEI_data")
setwd("C:/Users/Farts of War/Desktop/final project exploratory analysis/exdata%2Fdata%2FNEI_data")
## of specificity
setwd("C:/Users/Farts of War/Desktop/final project exploratory analysis/exdata%2Fdata%2FNEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Use the numeric columns to perform exploratory data analysis.
## Subset the data specific to Baltimore
library(dplyr)
library(dplyr)
Total_emissions <- NEI %>% group_by(year, sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = Total_emissions$Emissions, names.arg =  total_emissions$year,
col = colors)
Total_emissions <- NEI %>% group_by(year, sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = Total_emissions$Emissions, names.arg =  Total_emissions$year,
col = colors)
q2
Total_emissions <- NEI %>% group_by(year, Emissions = sum(Emissions))
Total_emissions <- NEI %>% group_by(year, Emissions = sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = Total_emissions$Emissions, names.arg =  Total_emissions$year,
col = colors)
dev.off()
total_emissions <- summarize(group_by(Balt, year),
Emissions = sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = total_emissions$Emissions, names.arg =  total_emissions$year,
col = colors)
setwd("C:/Users/Farts of War/Desktop/final project exploratory analysis/exdata%2Fdata%2FNEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
library(dplyr)
Total_emissions <- summarize(group_by(NEI, year),
Emissions = sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = Total_emissions$Emissions, names.arg =  Total_emissions$year,
col = colors)
Total_emissions <- summarize(group_by(NEI, year),
Emissions = sum(Emissions)/ 1000)
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = Total_emissions$Emissions, names.arg =  Total_emissions$year,
col = colors)
?barplot
Balt <- NEI %>% filter(fips == "24510")%>%group_by(year, sum(Emissions))
total_emissions <- summarize(group_by(Balt, year),
Emissions = sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = total_emissions$Emissions, names.arg =  total_emissions$year,
col = colors, legend.text = "PM[2.5] Levels in Baltimore, Maryland")
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = total_emissions$Emissions, names.arg =  total_emissions$year,
col = colors, main = "PM[2.5] Levels in Baltimore, Maryland")
?barplot
total_emissions <- summarize(group_by(Balt, year),
Emissions = sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = total_emissions$Emissions, names.arg =  total_emissions$year,
col = colors, main = "PM[2.5] Levels in Baltimore, Maryland", xlab = "Years", ylab = "Emissions in Kilotons")
total_types <- summarize(group_by(Balt, year), type = sum(type))
str(Balt$type)
type <- Balt$type
type$points
with(Balt, ggplot(type, Emissions))
library(ggplot2)
with(Balt, ggplot(type, Emissions))
?ggplot
ggplot(Balt, aes(type, Emissions))
?ggplot
ggplot(Balt, aes(Emissions))
ggplot(Balt, aes(year , Emissions))
ggplot(Balt, aes(Balt$year , Balt$Emissions))
Balt <- NEI %>% filter(fips == "24510")%>%group_by(year, sum(Emissions))
ggplot(Balt, aes(Balt$type,Balt$Emissions))
library(dplyr)
png(filename = 'plot1.png', width = 480, height = 480, units = 'px')
Total_emissions <- summarize(group_by(NEI, year),
Emissions = sum(Emissions)/ 1000)
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = Total_emissions$Emissions, names.arg =  Total_emissions$year,
col = colors)
# The pollution levels have gone down over time
Total_emissions <- summarize(group_by(NEI, year),
Emissions = sum(Emissions)/ 1000)
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = Total_emissions$Emissions, names.arg =  Total_emissions$year,
col = colors, main = "Total PM'[2.5]* Emission")
Total_emissions <- summarize(group_by(NEI, year),
Emissions = sum(Emissions)/ 1000)
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = Total_emissions$Emissions, names.arg =  Total_emissions$year,
col = colors, main = "Total PM[2.5] Emissions Country Wide")
dev.off()
Total_emissions <- summarize(group_by(NEI, year),
Emissions = sum(Emissions)/ 1000)
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = Total_emissions$Emissions, names.arg =  Total_emissions$year,
col = colors, main = "Total PM[2.5] Emissions Country Wide")
Balt <- NEI %>% filter(fips == "24510")%>%group_by(year, sum(Emissions))
total_emissions <- summarize(group_by(Balt, year),
Emissions = sum(Emissions))
colors <-c("cyan","green", "purple", "red")
q2 <- barplot(height = total_emissions$Emissions, names.arg =  total_emissions$year,
col = colors, main = "PM[2.5] Levels in Baltimore, Maryland", xlab = "Years", ylab = "Emissions in Kilotons")
total_emissions <- summarize(group_by(Balt, year),
Emissions = sum(Emissions))
ggplot(total_emissions, aes(x=factor(year), y=Emissions, fill =type, label = Emissions)))+geom_bar(stat="identity")+
facet_grid(.~type)
ggplot(total_emissions, aes(x=factor(year), y=Emissions, fill =type, label = Emissions))+geom_bar(stat="identity")+
facet_grid(.~type)
ggplot(total_emissions, aes(x=factor(year), y=Emissions, fill =type, label = Emissions))+
facet_grid(.~type)
ggplot(total_emissions, aes(x=factor(year), y=Emissions, fill =type))+
facet_grid(.~type)
ggplot(total_emissions, aes(x=factor(year), y=Emissions, fill =type))+
+geom_bar(stat="identity")+facet_grid(.~type)
baltcitymary.emissions.byyear<-summarise(group_by(filter(NEI, fips == "24510"), year,type), Emissions=sum(Emissions))
# clrs <- c("red", "green", "blue", "yellow")
ggplot(baltcitymary.emissions.byyear, aes(x=factor(year), y=Emissions, fill=type,label = round(Emissions,2))) +
geom_bar(stat="identity") +
#geom_bar(position = 'dodge')+
facet_grid(. ~ type)
total_emissions <- summarize(group_by(Balt, year, type),
Emissions = sum(Emissions))
ggplot(total_emissions, aes(x=factor(year), y=Emissions, fill =type, label = round(Emissions,2)))+
+geom_bar(stat="identity")+facet_grid(. ~type)+xlab("year")
total_emissions <- summarize(group_by(Balt, year, type),
Emissions = sum(Emissions))
ggplot(total_emissions, aes(x=factor(year), y=Emissions, fill =type, label = round(Emissions,2)))+
+facet_grid(. ~type)+xlab("year")
library(ggplot2)
total_emissions <- summarize(group_by(Balt, year, type),
Emissions = sum(Emissions))
ggplot(total_emissions, aes(x=factor(year), y=Emissions, fill =type, label = round(Emissions,2)))+
+facet_grid(. ~type)+xlab("year")
Baltimore <- filter(NEI, fips == "24510")
total_emissions <- select((Baltimore, year, type),Emissions = sum(Emissions))
Baltimore <- filter(NEI, fips == "24510")
total_emissions <- summarize(select(Baltimore, year, type),Emissions = sum(Emissions))
Baltimore <- filter(NEI, fips == "24510")
total_emissions <- summarize(group_by(Baltimore, year, type),Emissions = sum(Emissions))
ggplot(total_emissions, aes(x=factor(year), y=Emissions, fill =type, label = round(Emissions,2)))+
+facet_grid(. ~type)+xlab("year")
?facet_grid
?summarize
x = rnorm(1000)
y = rnorm(1000)
ggplot(aes(x,y))
plot(x,y)
smoothScatter(x,y)
ggplot(Baltimore, aes(type, Emissions, year))
Total_emissions <- summarize(group_by(Baltimore, year, type),Emissions = sum(Emissions))
ggplot(Total_emissions, aes(years, Emissions))
ggplot(Total_emissions, aes(x= years, y= Emissions))
str(Total_emissions$years)
str(Total_emissions$year)
ggplot(Total_emissions, aes(x= year, y= Emissions))
ggplot(Total_emissions, aes(x= year, y= Emissions), fill = type)
ggplot(Total)
Baltimore$year
Total_emissions <- summarize(group_by(filter(NEI, fips == "24510"), year, type),Emissions = sum(Emissions))
ggplot(total_emissions, aes(x=factor(year), y=Emissions, fill =type, label = round(Emissions,2)))+
+facet_grid(. ~type)+xlab("year")
Total_emissions <- summarize(group_by(filter(NEI, fips == "24510"), year, type),Emissions = sum(Emissions))
ggplot(Total_emissions, aes(x=factor(year), y=Emissions, fill =type, label = round(Emissions,2)))+
+facet_grid(. ~type)+xlab("year")
Total_emissions <- summarize(group_by(filter(NEI, fips == "24510"), year, type),Emissions = sum(Emissions))
ggplot(Total_emissions, aes(x=factor(year), y=Emissions, fill=type))+geom_bar(stat="identify")+
facet_grid(. ~type)
ggplot(Total_emissions, aes(x=factor(year), y=Emissions, fill=type))+
facet_grid(. ~type)
baltcitymary.emissions.byyear<-summarise(group_by(filter(NEI, fips == "24510"), year,type), Emissions=sum(Emissions))
# clrs <- c("red", "green", "blue", "yellow")
ggplot(baltcitymary.emissions.byyear, aes(x=factor(year), y=Emissions, fill=type,label = round(Emissions,2))) +
geom_bar(stat="identity") +
#geom_bar(position = 'dodge')+
facet_grid(. ~ type) +
xlab("year") +
ylab(expression("total PM"[2.5]*" emission in tons")) +
ggtitle(expression("PM"[2.5]*paste(" emissions in Baltimore ",
"City by various source types", sep="")))+
geom_label(aes(fill = type), colour = "white", fontface = "bold")
ggplot(Total_emissions, aes(x=factor(year), y=Emissions, fill=type), label = round(Emissions,2))+
geom_bar(stat="identify")+facet_grid(. ~type)
baltcitymary.emissions.byyear<-summarise(group_by(filter(NEI, fips == "24510"), year,type), Emissions=sum(Emissions))
# clrs <- c("red", "green", "blue", "yellow")
ggplot(baltcitymary.emissions.byyear, aes(x=factor(year), y=Emissions, fill=type,label = round(Emissions,2))) +
geom_bar(stat="identity") +
#geom_bar(position = 'dodge')+
facet_grid(. ~ type) +
xlab("year") +
ylab(expression("total PM"[2.5]*" emission in tons")) +
ggtitle(expression("PM"[2.5]*paste(" emissions in Baltimore ",
"City by various source types", sep="")))+
geom_label(aes(fill = type), colour = "white", fontface = "bold")
ggplot(Total_emissions, aes(x=factor(year), y=Emissions, fill=type), label = round(Emissions,2)))+
geom_bar(stat="identity")+facet_grid(. ~type)
ggplot(baltcitymary.emissions.byyear, aes(x=factor(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type) +
xlab("year") +
ylab("total PM"[2.5]*" emission in tons") +
ggtitle(expression("PM"[2.5]*paste(" emissions in Baltimore ",
"City by various source types", sep="")))+
geom_label(aes(fill = type), colour = "white", fontface = "bold")
baltcitymary.emissions.byyear<-summarise(group_by(filter(NEI, fips == "24510"), year,type), Emissions=sum(Emissions))
# clrs <- c("red", "green", "blue", "yellow")
ggplot(baltcitymary.emissions.byyear, aes(x=factor(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type) +
xlab("year") +
ylab("total PM"[2.5]*" emission in tons")
ggplot(baltcitymary.emissions.byyear, aes(x=factor(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type)
baltcitymary.emissions.byyear<-summarise(group_by(filter(NEI, fips == "24510"), year,type), Emissions=sum(Emissions))
# clrs <- c("red", "green", "blue", "yellow")
ggplot(baltcitymary.emissions.byyear, aes(x=factor(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type)
baltcitymary.emissions.byyear<-summarize(group_by(filter(NEI, fips == "24510"), year,type), Emissions=sum(Emissions))
# clrs <- c("red", "green", "blue", "yellow")
ggplot(baltcitymary.emissions.byyear, aes(x=factor(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type)
baltcitymary.emissions.byyear<-summarize(group_by(Baltimore, year,type), Emissions=sum(Emissions))
# clrs <- c("red", "green", "blue", "yellow")
ggplot(baltcitymary.emissions.byyear, aes(x=factor(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type)
Total_emissions <-summarize(group_by(Baltimore, year,type), Emissions=sum(Emissions))
# clrs <- c("red", "green", "blue", "yellow")
ggplot(Total_emissions , aes(x=factor(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type)
Baltimore$Pollutant
